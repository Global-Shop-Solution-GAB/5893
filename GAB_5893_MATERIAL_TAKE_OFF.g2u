Program.Sub.ScreenSU.Start
Gui.frmMaterialTakeOff..Create(BaseForm)
Gui.frmMaterialTakeOff..Caption("Material Take Off")
Gui.frmMaterialTakeOff..Size(14985,10695)
Gui.frmMaterialTakeOff..MinX(0)
Gui.frmMaterialTakeOff..MinY(0)
Gui.frmMaterialTakeOff..Position(0,0)
Gui.frmMaterialTakeOff..BackColor(-2147483633)
Gui.frmMaterialTakeOff..MousePointer(0)
Gui.frmMaterialTakeOff..Event(UnLoad,frmMaterialTakeOff_UnLoad)
Gui.frmMaterialTakeOff..AlwaysOnTop(False)
Gui.frmMaterialTakeOff..FontName("Tahoma")
Gui.frmMaterialTakeOff..FontSize(8.25)
Gui.frmMaterialTakeOff..ControlBox(True)
Gui.frmMaterialTakeOff..MaxButton(True)
Gui.frmMaterialTakeOff..MinButton(True)
Gui.frmMaterialTakeOff..Moveable(True)
Gui.frmMaterialTakeOff..Sizeable(True)
Gui.frmMaterialTakeOff..ShowInTaskBar(True)
Gui.frmMaterialTakeOff..TitleBar(True)
Gui.frmMaterialTakeOff.txtParent.Create(TextBox,"",True,2265,300,0,45,270,False,0,"Arial",8,-2147483643,1)
Gui.frmMaterialTakeOff.txtParent.Event(LostFocus,txtParent_LostFocus)
Gui.frmMaterialTakeOff.cmdBrowse.Create(Button)
Gui.frmMaterialTakeOff.cmdBrowse.Size(555,375)
Gui.frmMaterialTakeOff.cmdBrowse.Position(2430,240)
Gui.frmMaterialTakeOff.cmdBrowse.Caption("^")
Gui.frmMaterialTakeOff.cmdBrowse.Event(Click,cmdBrowse_Click)
Gui.frmMaterialTakeOff.cmdBrowse.Enabled(True)
Gui.frmMaterialTakeOff.cmdBrowse.Visible(True)
Gui.frmMaterialTakeOff.cmdBrowse.Zorder(0)
Gui.frmMaterialTakeOff.cmdBrowse.FontName("Tahoma")
Gui.frmMaterialTakeOff.cmdBrowse.FontSize(8.25)
Gui.frmMaterialTakeOff.lbl1.Create(Label,"Parent BOM:",True,1935,255,0,60,75,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMaterialTakeOff.lbl1.BorderStyle(0)
Gui.frmMaterialTakeOff.gsgcParts.Create(GsGridControl)
Gui.frmMaterialTakeOff.gsgcParts.Size(14835,9285)
Gui.frmMaterialTakeOff.gsgcParts.Position(75,675)
Gui.frmMaterialTakeOff.gsgcParts.Enabled(True)
Gui.frmMaterialTakeOff.gsgcParts.Visible(True)
Gui.frmMaterialTakeOff.gsgcParts.Zorder(0)
Gui.frmMaterialTakeOff.chkByPass.Create(CheckBox)
Gui.frmMaterialTakeOff.chkByPass.Size(3510,300)
Gui.frmMaterialTakeOff.chkByPass.Position(3135,255)
Gui.frmMaterialTakeOff.chkByPass.Caption("Bypass BOM Cost Buildup")
Gui.frmMaterialTakeOff.chkByPass.Enabled(True)
Gui.frmMaterialTakeOff.chkByPass.Visible(True)
Gui.frmMaterialTakeOff.chkByPass.Zorder(0)
Gui.frmMaterialTakeOff.chkByPass.FontName("Tahoma")
Gui.frmMaterialTakeOff.chkByPass.FontSize(8.25)
Gui.frmMaterialTakeOff.chkUseAltCost.Create(CheckBox)
Gui.frmMaterialTakeOff.chkUseAltCost.Enabled(True)
Gui.frmMaterialTakeOff.chkUseAltCost.Visible(True)
Gui.frmMaterialTakeOff.chkUseAltCost.Zorder(0)
Gui.frmMaterialTakeOff.chkUseAltCost.Size(2655,300)
Gui.frmMaterialTakeOff.chkUseAltCost.Position(5460,255)
Gui.frmMaterialTakeOff.chkUseAltCost.Caption("Use Alt Cost from Inventory")
Gui.frmMaterialTakeOff.chkUseAltCost.FontName("Tahoma")
Gui.frmMaterialTakeOff.chkUseAltCost.FontSize(8.25)
Gui.frmMaterialTakeOff.cmdCreateQuote.Create(Button)
Gui.frmMaterialTakeOff.cmdCreateQuote.Enabled(True)
Gui.frmMaterialTakeOff.cmdCreateQuote.Visible(True)
Gui.frmMaterialTakeOff.cmdCreateQuote.Zorder(0)
Gui.frmMaterialTakeOff.cmdCreateQuote.Size(1500,345)
Gui.frmMaterialTakeOff.cmdCreateQuote.Position(11775,240)
Gui.frmMaterialTakeOff.cmdCreateQuote.Caption("Create Quote")
Gui.frmMaterialTakeOff.cmdCreateQuote.FontName("Tahoma")
Gui.frmMaterialTakeOff.cmdCreateQuote.FontSize(8.25)
Gui.frmMaterialTakeOff.cmdCreateQuote.Event(Click,cmdCreateQuote_Click)
Gui.frmMaterialTakeOff.cmdProcess.Create(Button)
Gui.frmMaterialTakeOff.cmdProcess.Enabled(True)
Gui.frmMaterialTakeOff.cmdProcess.Visible(False)
Gui.frmMaterialTakeOff.cmdProcess.Zorder(0)
Gui.frmMaterialTakeOff.cmdProcess.Size(1320,345)
Gui.frmMaterialTakeOff.cmdProcess.Position(7830,240)
Gui.frmMaterialTakeOff.cmdProcess.Caption("Cost Build")
Gui.frmMaterialTakeOff.cmdProcess.FontName("Tahoma")
Gui.frmMaterialTakeOff.cmdProcess.FontSize(8.25)
Gui.frmMaterialTakeOff.cmdProcess.Event(Click,cmdProcess_Click)
Gui.frmMaterialTakeOff.txtMargin.Create(TextBox,"",True,660,300,0,9360,270,True,0,"Tahoma",8.25,,1)
Gui.frmMaterialTakeOff.lbl2.Create(Label,"Margin",True,480,195,0,9375,30,True,0,"Tahoma",8.25,,0,0)
Gui.frmMaterialTakeOff.lbl2.BorderStyle(0)
Gui.frmMaterialTakeOff.txtCustomer.Create(TextBox,"",True,1125,300,0,10065,270,True,0,"Tahoma",8.25,,1)
Gui.frmMaterialTakeOff.cmdBrowseCust.Create(Button)
Gui.frmMaterialTakeOff.cmdBrowseCust.Enabled(True)
Gui.frmMaterialTakeOff.cmdBrowseCust.Visible(True)
Gui.frmMaterialTakeOff.cmdBrowseCust.Zorder(0)
Gui.frmMaterialTakeOff.cmdBrowseCust.Size(525,345)
Gui.frmMaterialTakeOff.cmdBrowseCust.Position(11220,240)
Gui.frmMaterialTakeOff.cmdBrowseCust.Caption("^")
Gui.frmMaterialTakeOff.cmdBrowseCust.FontName("Tahoma")
Gui.frmMaterialTakeOff.cmdBrowseCust.FontSize(8.25)
Gui.frmMaterialTakeOff.cmdBrowseCust.DefaultValue("")
Gui.frmMaterialTakeOff.cmdBrowseCust.Event(Click,cmdBrowseCust_Click)
Gui.frmMaterialTakeOff.lbl3.Create(Label,"Customer",True,690,195,0,10125,30,True,0,"Tahoma",8.25,,0,0)
Gui.frmMaterialTakeOff.lbl3.BorderStyle(0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("6004.lib")
Program.External.Include.Library("175100.lib")
Program.External.Include.Library("175200.lib")
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.UI.SetBrowserHotTypeAhead(true)
f.ODBC.Connection!con.opencompanyconnection(60)
F.Intrinsic.Control.CallSub(SetContextMenus)
gui.frmMaterialTakeOff.chkByPass.Value(0)
gui.frmMaterialTakeOff.chkUseAltCost.Value(1)
'gui.frmMaterialTakeOff.chkByPass.Value(1)
GUI.frmMaterialTakeOff.gsgcParts.anchor(15)
gui.frmMaterialTakeOff..Show
Program.Sub.Main.End

Program.Sub.CostBuild.Start
f.Intrinsic.Control.Try
	V.Local.sStatus.Declare
	v.Local.ssql.Declare
	v.Local.sParent.Declare
	v.Local.sParentSeq.Declare
	v.Local.sExpr.Declare
	v.Local.sColName.Declare
	v.Local.sType.Declare
	V.Local.sRet.Declare
	v.Local.sDescription.Declare
	v.Local.sLevel.Declare
	v.Local.sXref.Declare
	v.Local.sInvUM.Declare
	v.Local.sPurUM.Declare
	v.Local.sSupplier.Declare
	v.Local.sPL.Declare
	v.Local.fUnitTotMatQty.Declare
	V.Local.fUnitTotMatQty1.Declare
	V.Local.fUnitTotMatQty2.Declare
	v.Local.fColValue.Declare
	v.Local.fTotCost.Declare
	v.Local.fTotQty.Declare
	v.Local.fTotPurQty.Declare
	v.Local.fTotInvQty.Declare
	v.Local.fExtnUnitQty.Declare
	v.Local.fUnitPurCost.Declare
	V.Local.fUnitCost.Declare
	v.Local.fConv.Declare
	v.Local.fActualQty.Declare
	v.Local.fParentQty.Declare
	V.Local.fpartqty.Declare
	v.Local.i.Declare
	v.Local.iMinusOne.Declare
	v.Local.iQty.Declare
	v.Local.iTotQty.Declare
	v.Local.j.Declare(long)
	v.Local.sParent.Set(v.Screen.frmMaterialTakeOff!txtParent.text)
	
	f.Intrinsic.UI.InvokeWaitDialog("Doing BOM Cost Buildup")
	GUI.frmMaterialTakeOff.gsgcParts.Visible(FALSE)
	
	'Run the cost buildup calculation
	f.Intrinsic.Control.If(v.Screen.frmMaterialTakeOff!chkByPass.Value,=,0)
		F.Global.Callwrapper.New("BOM","Manufacturing.BOM.CostBuildup")
		F.Global.Callwrapper.SetProperty("BOM","Program","      ")
		F.Global.Callwrapper.SetProperty("BOM","Flags","1")
		F.Global.Callwrapper.SetProperty("BOM","Parent",v.Local.sParent)
		F.Global.CallWrapper.Run("BOM")
		F.Global.CallWrapper.GetProperty("BOM","Status",V.Local.sStatus)
	f.Intrinsic.Control.EndIf

	'Grab the data from the table
	F.Intrinsic.Control.CallSub(CreateDataTablesSetProperties)

	'Grab the data from the cost build up program
	f.Intrinsic.String.Build("select * from BI_BOM_BUILDUP_E WHERE TRMNL='{0}' AND PARENT_KEY='{1}' AND RPTID='004203'",v.Caller.Terminal,v.Local.sParent,v.Local.ssql)
	f.Data.DataTable.CreateFromSQL("dt","con",v.Local.ssql)
	F.Data.DataTable.AddColumn("dt","Type","string")
	F.Data.DataTable.AddColumn("dt","Parent","string")
	F.Data.DataTable.AddColumn("dt","ParentSeq","string")
	F.Data.DataTable.AddColumn("dt","ParentQTy","float")
	F.Data.DataTable.AddColumn("dt","PartQTY","float")
	F.Data.DataTable.AddColumn("dt","ActualQty","float")

	'Add the unit type for ease of modeling the data
	F.Intrinsic.Control.For(v.local.i,0,v.DataTable.dt.RowCount--,1)
		f.Intrinsic.Math.Sub(v.Local.i,1,v.Local.iMinusOne)
		F.Intrinsic.Control.If(V.DataTable.dt(V.Local.I).LEVEL!FIELDVALTRIM,<>,"PARENT")
			f.Intrinsic.Control.If(v.DataTable.dt(v.Local.i).LEVEL!FIELDVALTRIM,=,"1*******")
				v.Local.sType.Set(v.DataTable.dt(v.Local.i).PART!FIELDVALTRIM)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.If(v.Local.sLevel,<>,v.DataTable.dt(v.Local.i).LEVEL!FIELDVALTRIM)
				v.Local.sParent.Set(v.DataTable.dt(v.Local.iMinusOne).PART!FIELDVALTRIM)
				v.Local.sParentSeq.Set(v.DataTable.dt(v.Local.iMinusOne).SEQUENCE!FIELDVALTRIM)
				v.Local.fParentQty.Set(v.DataTable.dt(v.Local.iMinusOne).parent_qty_1!fieldval)
			f.Intrinsic.Control.EndIf
			v.Local.fpartqty.Set(v.DataTable.dt(v.Local.i).PARENT_QTY_1!FIELDVAL)
			F.Intrinsic.Math.Mult(v.Local.fParentQty,V.Local.fPartQty,V.Local.fActualQty)
			v.Local.sLevel.Set(v.DataTable.dt(v.Local.i).LEVEL!FIELDVALTRIM)
			f.Data.DataTable.SetValue("dt",V.Local.i,"Type",v.Local.sType)
			F.Data.DataTable.SetValue("dt",v.Local.i,"Parent",v.Local.sParent)
			f.Data.DataTable.SetValue("dt",v.Local.i,"ParentSeq",v.Local.sParentSeq)
			f.Data.DataTable.SetValue("dt",v.Local.i,"ParentQty",v.Local.fParentQty)
			f.Data.DataTable.SetValue("dt",v.Local.i,"PartQty",v.Local.fPartQTY)
			f.Data.DataTable.SetValue("dt",v.Local.i,"ActualQty",v.Local.fActualQty)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(v.Local.i)
	
	'Data table for creation of parts
	f.Data.DataView.Create("dt","dv",22," (source='Purch to Stock' or source='Purch to Job')","")
	f.Data.DataView.ToDatatableDistinct("dt","dv","dtUnique","Part")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtUnique.RowCount--,1)
		'Select the description, units of measure, basic information from the part master and add row to the dtParts datatable
		f.Intrinsic.String.Build("SELECT DESCRIPTION, UM_PURCHASING, UM_INVENTORY, IFNULL(FACTOR_CONVERSION,0), NAME_VENDOR, PRODUCT_LINE FROM V_INVENTORY_ALL WHERE PART='{0}'",v.DataTable.dtUnique(v.local.i).PART!FIELDVALTRIM,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sRet)
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
		v.Local.sDescription.Set(v.Local.sRet(0))
		v.Local.sPurUM.Set(v.Local.sRet(1))
		v.Local.sInvUM.Set(v.Local.sRet(2))
		v.Local.fConv.Set(v.Local.sRet(3))
		v.Local.sSupplier.Set(v.Local.sRet(4))
		v.Local.sPL.Set(v.Local.sRet(5))
		f.Intrinsic.String.Build("SELECT PCPART FROM GAB_5893_XREF WHERE GSSPART='{0}'",v.DataTable.dtUnique(v.local.i).PART!FIELDVALTRIM,v.Local.ssql)
		f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sXref)
		f.Data.DataTable.AddRow("dtParts","Material",v.DataTable.dtUnique(v.Local.i).PART!FIELDVALTRIM,"Description",v.Local.sDescription,"UnitCost",v.Local.fUnitCost,"XREF",v.Local.sXref,"InvUM",v.Local.sInvUM,"PurUM",v.Local.sPurUM,"Conv",v.Local.fconv,"Supplier",v.Local.sSupplier,"ProductLine",v.Local.sPL)

		'This is the complicated part, loop through all of the column names, add up all of the quantities
		f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtColNames.RowCount--,1)
			f.Intrinsic.String.build("Type='{0}' and Part='{1}'",v.DataTable.dtColNames(v.Local.j).ColName!fieldvaltrim,v.DataTable.dtUnique(v.Local.i).PART!FIELDVALTRIM,v.Local.sExpr)
			F.Data.DataTable.Compute("DT","Sum(actualqty)",V.Local.sExpr,V.Local.fUnitTotMatQty)
			
			f.Intrinsic.String.Build("PART='{0}'",v.DataTable.dtColNames(v.Local.j).ColName!FIELDVALTRIM,v.Local.sExpr)
			f.Data.Datatable.Select("dtUnitQty",v.Local.sExpr,v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"***NORETURN***")
				V.Local.iQty.Set(v.DataTable.dtUnitQty(v.Local.sRet).PARENT_QTY_1!FIELDVAL)
			f.Intrinsic.Control.EndIf

			v.Local.fColValue.Set(v.Local.fUnitTotMatQty)
			f.Data.DataTable.SetValue("dtParts",v.Local.i,v.DataTable.dtColNames(v.Local.j).ColName!fieldvaltrim,v.Local.fColValue)
			f.Intrinsic.Math.Mult(v.Local.fColValue,v.Local.iQty,v.Local.fExtnUnitQty)
			F.Intrinsic.Math.Add(V.Local.fTotInvQty,v.Local.fExtnUnitQty,v.Local.fTotInvQty)
		f.Intrinsic.Control.Next(v.Local.j)

		f.Intrinsic.Control.If(v.Screen.frmMaterialTakeOff!chkUseAltCost.Value,=,1)
			f.Intrinsic.String.Build("SELECT IFNULL(AMT_ALT_COST,0) FROM V_INVENTORY_MSTR WHERE PART='{0}'",v.DataTable.dtUnique(v.local.i).PART!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fUnitCost)
			f.Intrinsic.Math.Mult(v.Local.fConv,v.Local.fUnitCost,v.Local.fUnitPurCost)
			F.Data.DataTable.SetValue("dtParts",v.Local.i,"UnitCost",v.Local.fUnitPurCost)
			'F.Intrinsic.Math.Mult(V.Local.fUnitCost,V.Local.fTotQty,V.Local.fTotCost)
		f.Intrinsic.Control.EndIf
		
		'f.Intrinsic.Math.Round(v.Local.fTotInvQty,0,v.Local.fTotInvQty)
		f.Data.Datatable.SetValue("dtParts",v.Local.i,"TotalInvQty",v.Local.fTotInvQty)
		f.Intrinsic.Control.If(v.Local.fConv,<>,0)
		f.Intrinsic.Control.AndIf(v.Local.fTotInvQty,<>,0)
			f.Intrinsic.Math.Div(v.Local.fTotInvQty,v.Local.fConv,v.Local.fTotPurQty)
			f.Intrinsic.Math.Round(v.Local.fTotPurQty,0,v.Local.fTotPurQty)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Math.Mult(v.Local.fTotPurQty,v.Local.fUnitPurCost,v.Local.fTotCost)
		f.Data.Datatable.SetValue("dtParts",v.Local.i,"TotalCost",v.Local.fTotCost)
		f.Data.Datatable.SetValue("dtParts",v.Local.i,"TotalPurQty",v.Local.fTotPurQty)
		
		v.Local.fTotPurQty.Set(0)
		v.Local.fTotInvQty.Set(0)
		v.Local.fTotCost.Set(0)
		v.Local.fUnitPurCost.Set(0)
		v.Local.fUnitTotMatQty.Set(0)
		v.Local.fColValue.Set(0)
		v.Local.fTotQty.Set(0)
		
	f.Intrinsic.Control.Next(v.Local.i)
	GUI.frmMaterialTakeOff.gsgcParts.Visible(True)
	f.Intrinsic.UI.CloseWaitDialog
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.CostBuild.End

Program.Sub.CreateDataTablesSetProperties.Start
f.Intrinsic.Control.Try
	V.Local.sSql.Declare
	v.Local.sParent.Declare
	v.Local.sCaption.Declare
	V.Local.iQty.Declare
	v.Local.i.Declare
	v.Local.sParent.Set(v.Screen.frmMaterialTakeOff!txtParent.text)
	
	F.Intrinsic.Control.If(V.DataTable.dtParts.Exists)
		F.Data.Datatable.Close("dtParts")
	F.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtParts",true)
	F.Data.DataTable.AddColumn("dtParts","Select","Boolean",FALSE)
	f.Data.DataTable.AddColumn("dtParts","Material","String")
	f.Data.DataTable.AddColumn("dtParts","XREF","String")
	f.Data.DataTable.AddColumn("dtParts","InvUM","String")
	f.Data.DataTable.AddColumn("dtParts","PurUM","String")
	f.Data.DataTable.AddColumn("dtParts","Conv","float")
	f.Data.DataTable.AddColumn("dtParts","Supplier","String")
	f.Data.DataTable.AddColumn("dtParts","TotalInvQty","Float")
	f.Data.DataTable.AddColumn("dtParts","TotalPurQty","Float")
	f.Data.DataTable.AddColumn("dtParts","UnitCost","float")
	f.Data.DataTable.AddColumn("dtParts","TotalCost","float")
	f.Data.DataTable.AddColumn("dtParts","RevUnitCost","float")
	f.Data.DataTable.AddColumn("dtParts","RevType","string")
	f.Data.DataTable.AddColumn("dtParts","RevTotalCost","float")
	f.Data.DataTable.AddColumn("dtParts","Difference","float")
	f.Data.DataTable.AddColumn("dtParts","Description","string")
	f.Data.DataTable.AddColumn("dtParts","ProductLine","string")
	
	f.Intrinsic.Control.If(v.DataTable.dtColNames.Exists)
		f.Data.Datatable.Close("dtColNames")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtColNames",true)
	f.Data.DataTable.AddColumn("dtColNames","ColName","string")
	
	'Grab the records from the cost build up and start creating columns for them 
	f.Intrinsic.String.Build("SELECT DISTINCT PART, PARENT_QTY_1 FROM BI_BOM_BUILDUP_E WHERE TRMNL='{0}' AND PARENT_KEY='{1}' AND RPTID='004203' AND LEVEL='1*******'",v.Caller.Terminal,v.Local.sParent,v.Local.ssql)
	f.Intrinsic.Control.If(v.DataTable.dtUnitQty.Exists)
		f.Data.Datatable.Close("dtUnitQty")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtUnitQty","con",v.Local.ssql,true)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtUnitQty.RowCount--,1)
		F.Data.DataTable.AddColumn("dtParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"Float",0)
		f.Data.DataTable.AddRow("dtColNames","ColName",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim)
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Bind the datasource and add the gridview
	gui.frmMaterialTakeOff.gsgcParts.DataSource("dtParts")
	gui.frmMaterialTakeOff.gsgcParts.AddGridviewFromDatatable("gvParts","dtParts")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Select","MinWidth","50")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Material","MinWidth","135")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalInvQty","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalPurQty","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Supplier","MinWidth","100")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","UnitCost","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalCost","MinWidth","95")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","InvUM","MinWidth","35")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","PurUM","MinWidth","35")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Conv","MinWidth","70")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevUnitCost","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevType","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevTotalCost","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Difference","MinWidth","75")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Description","MinWidth","180")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","XREF","MinWidth","200")
	
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalInvQty","Caption","Total Inv Qty")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","UnitCost","Caption","Unit Pur Cost")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalCost","Caption","Total Cost")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevUnitCost","Caption","Rev. Unit Cost")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevType","Caption","Rev. Type")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevTotalCost","Caption","Rev. Total Cost")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","InvUM","Caption","Inv. UM")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","PurUM","Caption","Pur. UM")
	
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Select","ReadOnly",False)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalInvQty","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","UnitCost","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalCost","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevUnitCost","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevType","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevTotalCost","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","PurUM","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","InvUM","ReadOnly",true)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalPurQty","ReadOnly",False)
		
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Select","AllowEdit",True)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalInvQty","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","UnitCost","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalCost","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevUnitCost","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevType","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevTotalCost","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","PurUM","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","InvUM","AllowEdit",false)
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalPurQty","AllowEdit",True)
	
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","ProductLine","Visible",false)
	
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevTotalCost","DisplayCustomNumeric","$#,###,###,##0.00")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","RevUnitCost","DisplayCustomNumeric","$#,###,###,##0.00")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalCost","DisplayCustomNumeric","$#,###,###,##0.00")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","UnitCost","DisplayCustomNumeric","$#,###,###,##0.00")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","TotalInvQty","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts","Difference","DisplayCustomNumeric","$#,###,###,##0.00")
	
	'Loop through the columns adding QTY to their caption
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtUnitQty.RowCount--,1)
		v.Local.iQty.Set(v.DataTable.dtUnitQty(v.Local.i).PARENT_QTY_1!fieldval)
		f.Intrinsic.Math.Round(v.Local.iQty,0,v.Local.iQty)
		f.Intrinsic.String.Concat(v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim," (",v.local.iQty,")",v.Local.sCaption)
		gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"Caption",v.Local.sCaption)
		gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"MinWidth","75")
		gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"ReadOnly",True)
		gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"AllowEdit",False)
		gui.frmMaterialTakeOff.gsgcParts.SetColumnProperty("gvParts",v.DataTable.dtUnitQty(v.Local.i).Part!fieldvaltrim,"DisplayCustomNumeric","#,###,###,##0.00")
	f.Intrinsic.Control.Next(v.Local.i)
		
	Gui.frmMaterialTakeOff.gsgcParts.AddSummaryItem("gvParts","TotalCost","SUM_TotalCost","Sum","","","n")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.CreateDataTablesSetProperties.End

Program.Sub.cmdBrowse_Click.Start
V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.set("Select PART, DESCRIPTION FROM V_BOM_ENG order by PART")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Parent*!*Description","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("2000*!*3000","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("Select a Parent","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	gui.frmMaterialTakeOff.txtParent.Text(v.Local.sRet(0))
	f.Intrinsic.Control.CallSub(CostBuild)
F.Intrinsic.Control.EndIf
Program.Sub.cmdBrowse_Click.End

Program.Sub.txtParent_LostFocus.Start
F.Intrinsic.Control.Try
	v.Local.sParent.Declare
	v.Local.sParent.Set(v.Screen.frmMaterialTakeOff!txtParent.Text)
	
	F.Intrinsic.Control.If(v.Local.sParent.Trim,<>,"")
		f.Intrinsic.Control.CallSub(CostBuild)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)

F.Intrinsic.Control.EndTry
Program.Sub.txtParent_LostFocus.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmMaterialTakeOff..ContextMenuCreate("ctxAll")
	Gui.frmMaterialTakeOff.gsgcParts.ContextMenuAttach("ctxAll")
	Gui.frmMaterialTakeOff..ContextMenuAddItem("ctxAll","Export",0,"Export")
	Gui.frmMaterialTakeOff..ContextMenuSetItemEventHandler("ctxAll","Export","MenuClickExport")	
	Gui.frmMaterialTakeOff..ContextMenuAddItem("ctxAll","CreatePO",0,"Create Blanket PO")
	Gui.frmMaterialTakeOff..ContextMenuSetItemEventHandler("ctxAll","CreatePO","MenuClickCreatePO")	
	
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End


Program.Sub.cmdCreateQuote_Click.Start
f.Intrinsic.Control.Try
	v.Local.sCustomer.Declare
	v.Local.sParent.Declare
	v.Local.sExtension.Declare
	v.Local.fExtension.Declare
	v.Local.fMargin.Declare
	v.Local.fInverse.Declare
	v.Local.fTotalCost.Declare
	
	'Set Variables
	v.Local.sParent.Set(v.Screen.frmMaterialTakeOff!txtParent.Text)
	v.Local.sCustomer.Set(v.Screen.frmMaterialTakeOff!txtCustomer.Text)
	v.Local.fMargin.Set(v.Screen.frmMaterialTakeOff!txtMargin.text)
	f.Data.DataTable.Compute("dtParts","Sum(TotalCost)","",v.Local.fTotalCost)
	f.Intrinsic.Control.If(v.Local.fMargin,<>,0)
	f.Intrinsic.Control.AndIf(v.Local.fTotalCost,<>,0)
		f.Intrinsic.Math.Sub(100,v.Local.fMargin,v.Local.fInverse)
		f.Intrinsic.Math.Mult(v.Local.fInverse,.01,v.Local.fInverse)
		f.Intrinsic.Math.Div(v.Local.fTotalCost,v.Local.fInverse,v.Local.fExtension)
	f.Intrinsic.Control.EndIf
	
	'Format the extension
	F.Intrinsic.Math.Round(V.Local.fExtension,6,V.Local.fExtension)
	F.Intrinsic.String.Format(v.Local.fExtension,"##########.000000",v.Local.sExtension)
	F.Intrinsic.String.Replace(V.Local.sExtension,".","",V.Local.sExtension)
	F.Intrinsic.String.LPad(V.Local.sExtension,"0",16,V.Local.sExtension)
	
	'Create the quote
	f.Data.Datatable.AddRow("6004Header","Type","Q","CustNum",V.Local.sCustomer.Trim)
	f.Data.Datatable.AddRow("6004Lines","QtyOrdered","0000000010000","UM","6004Header","Part",v.Local.sParent,"PL","FG","PartDescription",v.Local.sParent,"QuotedPrice",v.Local.sExtension,"User3","1","User4","1","User5","1")
	f.Intrinsic.Control.CallSub(6004Sync)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateQuote_Click.End

Program.Sub.cmdProcess_Click.Start
Program.Sub.cmdProcess_Click.End

Program.Sub.MenuClickCreatePO.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sVend.Declare
	v.Local.sPart.Declare
	v.Local.sDesc.Declare
	v.Local.sPurU.Declare
	v.Local.fPurC.Declare
	v.Local.sPurC.Declare
	v.Local.fPurQ.Declare
	v.Local.sPurQ.Declare
	v.Local.sGenL.Declare
	v.Local.sPrdL.Declare
	v.Local.sFile.Declare
	v.Local.sCont.Declare
	v.Local.sVals.Declare
	v.Local.sPNum.Declare
	v.Local.sPTyp.Declare
	v.Local.sSQL.Declare
	
	F.Data.DataTable.AddRow("175100","AutoNumber","Y")
	f.Intrinsic.Control.For(v.local.i,0,v.DataTable.dtParts.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtParts(v.Local.i).Select!fieldval)
			v.Local.sPart.Set(v.DataTable.dtParts(v.Local.i).MATERIAL!FIELDVALTRIM)
			v.Local.sVend.Set(v.DataTable.dtParts(v.Local.i).SUPPLIER!FIELDVALTRIM)
			v.Local.sDesc.Set(v.DataTable.dtParts(v.Local.i).DESCRIPTION!FIELDVALTRIM)
			v.Local.sPurU.Set(v.DataTable.dtParts(v.Local.i).PURUM!FIELDVALTRIM)
			v.Local.fPurC.Set(v.DataTable.dtParts(v.Local.i).UnitCost!fieldval)
			v.Local.fPurQ.Set(v.DataTable.dtParts(v.Local.i).TotalPurQty!fieldval)
			v.Local.sPrdL.Set(v.DataTable.dtParts(v.Local.i).ProductLine!fieldvaltrim)
			f.Intrinsic.String.Build("SELECT GL_ACCT FROM PL_GL_ACCOUNTS WHERE PROD_LINE='{0}' AND TYPE='2'",v.Local.sPrdL.Trim,v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sGenL)
			f.Data.DataTable.AddRow("175100File","Part",v.Local.sPart,"Vendor",v.Local.sVend,"Description",v.Local.sDesc,"POUM",v.Local.sPurU,"POQty",v.Local.fPurQ,"POCost",v.Local.fPurC,"GLAccount",v.Local.sGenL)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)	
	f.Intrinsic.Control.CallSub(175100Sync)
	
	'Post Processing, need to set the PO to be a blanket purchase order
	f.Intrinsic.Control.If(v.DataTable.dtPO.exists)
		f.Data.DataTable.Close("dtPO")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtPO",true)
	f.Data.DataTable.AddColumn("dtPO","PONumber","String")
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\SLPUR",v.Caller.Terminal,".TXT",v.Local.sFile)
	f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sCont)
	f.Intrinsic.String.Split(v.Local.sCont,v.Ambient.NewLine,v.Local.sCont)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sCont.UBound,1)
		f.Intrinsic.String.Split(v.Local.sCont(v.Local.i),v.Ambient.Tab,v.Local.sVals)
		v.Local.sPNum.Set(v.Local.sVals(0))
		v.Local.sPTyp.Set(v.Local.sVals(1))
		f.Intrinsic.Control.If(v.Local.sPTyp.Trim,=,"A")
			f.Data.DataTable.AddRow("dtPO","PONumber",v.Local.sPNum)
			f.Intrinsic.String.Build("UPDATE PO_HEADER SET TYPE='1' WHERE PURCHASE_ORDER='{0}' AND RECORD_NO='  A '",v.Local.sPNum,v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Open each purchase order
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPO.RowCount--,1)
		f.Data.DataTable.AddRow("175200","Mode","O","PONum",v.DataTable.dtPO(v.Local.i).PONumber!fieldvaltrim)
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(175200Sync)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.MenuClickCreatePO.End

Program.Sub.MenuClickExport.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sDateTimeStamp.Declare
	
	F.Intrinsic.String.Format(V.Ambient.Now,"YYYYMMDD HHNNSS",v.local.sDateTimeStamp)
	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_5893_MATERIAL_TAKEOFF_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sDateTimeStamp,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.frmMaterialTakeOff.gsgcParts.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_5893_MATERIAL_TAKEOFF{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sDateTimeStamp,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.frmMaterialTakeOff.gsgcParts.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.cmdBrowseCust_Click.Start
F.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.set("SELECT CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Customer*!*Name Customer","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a customer","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sret)
		gui.frmMaterialTakeOff.txtCustomer.Text(v.Local.sRet(0))
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmMaterialTakeOff_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseCust_Click.End


Program.Sub.frmMaterialTakeOff_UnLoad.Start
f.ODBC.Connection!con.Close
f.Intrinsic.Control.End
Program.Sub.frmMaterialTakeOff_UnLoad.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$0
${$6$}$rfisher$}$20200403094606707$}$b10QVt26jzz6R0J+Y14BUjvWwMpAez4tHeTUHa2PkVWO4kLbjo08K3Yxw3HM71Y/CwdG8giBG80=
Program.Sub.Comments.End